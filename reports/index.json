{
  "stats": {
    "suites": 6,
    "tests": 8,
    "passes": 8,
    "pending": 0,
    "failures": 0,
    "start": "2024-09-16T17:01:43.825Z",
    "end": "2024-09-16T17:01:49.664Z",
    "duration": 5839,
    "testsRegistered": 8,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "90e6e418-5b35-4d01-aea4-e9e999198e68",
      "title": "",
      "fullFile": "C:\\Users\\Tap\\Desktop\\proyectoFinal2.0\\test\\super.test.js",
      "file": "\\test\\super.test.js",
      "beforeHooks": [
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 1907,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "this.timeout(10000);\nmongoose\n    .connect(MONGODB_CNX_STR)\n    .then(() => done())\n    .catch(done);",
          "err": {},
          "uuid": "d9a001d0-d045-4fee-b004-3330c0007e25",
          "parentUUID": "90e6e418-5b35-4d01-aea4-e9e999198e68",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [
        {
          "title": "\"after all\" hook in \"{root}\"",
          "fullTitle": "\"after all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 1162,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "this.timeout(20000);\nPromise.all([\n    mongoose.connection.db.collection('productos').deleteMany({}),\n    mongoose.connection.db.collection('carritos').deleteMany({}),\n    mongoose.connection.db.collection('sessions').deleteMany({}),\n    mongoose.connection.db.collection('usuarios').deleteMany({}),\n])\n    .then(() => mongoose.disconnect())\n    .then(() => done())\n    .catch(done);",
          "err": {},
          "uuid": "7b7804bb-922c-496d-8c86-50dfcf429d7b",
          "parentUUID": "90e6e418-5b35-4d01-aea4-e9e999198e68",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [],
      "suites": [
        {
          "uuid": "5cdbd94d-69e8-4f05-a450-89fed443df2f",
          "title": "Testing sesiones:",
          "fullFile": "C:\\Users\\Tap\\Desktop\\proyectoFinal2.0\\test\\super.test.js",
          "file": "\\test\\super.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "eb084593-099e-4e58-850b-7c4de434334d",
              "title": "registrarse",
              "fullFile": "C:\\Users\\Tap\\Desktop\\proyectoFinal2.0\\test\\super.test.js",
              "file": "\\test\\super.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "registra usuario",
                  "fullTitle": "Testing sesiones: registrarse registra usuario",
                  "timedOut": false,
                  "duration": 1011,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const datos = {\n    nombre: 'x',\n    apellido: 'x',\n    email: 'x@x.com',\n    password: '1234',\n    rol: 'premium',\n};\nconst res = await requester\n    .post('/api/sessions/register')\n    .send(datos);\nusuarioId = res.body.user._id;\nexpect(res.status).to.equal(201);\nexpect(res.body).to.have.property('status').that.equals('success');\nexpect(res.body)\n    .to.have.property('message')\n    .that.equals('Registro exitoso');\nexpect(res.body.user)\n    .to.have.property('email')\n    .that.equals('x@x.com');",
                  "err": {},
                  "uuid": "812c7af9-18d5-4b77-bb2e-1a5d1a6100d5",
                  "parentUUID": "eb084593-099e-4e58-850b-7c4de434334d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "812c7af9-18d5-4b77-bb2e-1a5d1a6100d5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1011,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "5b9ffff2-3771-41fa-b036-9d239fe4b49f",
              "title": "Iniciar sesión:",
              "fullFile": "C:\\Users\\Tap\\Desktop\\proyectoFinal2.0\\test\\super.test.js",
              "file": "\\test\\super.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "debería fallar con credenciales incorrectas",
                  "fullTitle": "Testing sesiones: Iniciar sesión: debería fallar con credenciales incorrectas",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const credentials = {\n    username: 'usuario',\n    password: 'password',\n};\nconst { statusCode, body } = await requester\n    .post('/api/sessions')\n    .send(credentials);\nexpect(statusCode).to.equal(404);",
                  "err": {},
                  "uuid": "6b9872af-b26b-4fd6-bce4-951c4c5ddd43",
                  "parentUUID": "5b9ffff2-3771-41fa-b036-9d239fe4b49f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "debería iniciar sesión correctamente",
                  "fullTitle": "Testing sesiones: Iniciar sesión: debería iniciar sesión correctamente",
                  "timedOut": false,
                  "duration": 374,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const datos = {\n    email: 'x@x.com',\n    password: '1234',\n};\nconst res = await requester.post('/api/sessions/login').send(datos);\ncarritoId = res.body.user.cart;\nexpect(res.status).to.equal(201); // Ajusta el código de estado a 200 si es necesario\nexpect(res.body)\n    .to.have.property('message')\n    .that.equals('login success');",
                  "err": {},
                  "uuid": "70e8acf5-30c5-4d25-af6a-919cb727f491",
                  "parentUUID": "5b9ffff2-3771-41fa-b036-9d239fe4b49f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6b9872af-b26b-4fd6-bce4-951c4c5ddd43",
                "70e8acf5-30c5-4d25-af6a-919cb727f491"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 379,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "158441ec-9c19-43ba-bbd1-c90d6390ee4c",
              "title": "Testing productos:",
              "fullFile": "C:\\Users\\Tap\\Desktop\\proyectoFinal2.0\\test\\super.test.js",
              "file": "\\test\\super.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Agregar un producto:",
                  "fullTitle": "Testing sesiones: Testing productos: Agregar un producto:",
                  "timedOut": false,
                  "duration": 187,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const producto = {\n    title: 'Casa',\n    description: 'Descripción de la casa',\n    price: 4241,\n    thumbnail: 'url-de-imagen',\n    code: `unique-code-${Date.now()}`,\n    stock: 10,\n    category: 'Inmuebles',\n    status: true,\n    owner: 'user@example.com',\n};\nconst req = await requester\n    .post('/api/products')\n    .set('x-test-mode', 'true')\n    .send(producto);\nproductoId = req.body._id; // Mostrar el cuerpo de la respuesta\nexpect(req.statusCode).to.equal(200);\nexpect(req.body).to.have.property('_id');\nexpect(req.body).to.have.property('title', 'Casa');",
                  "err": {},
                  "uuid": "1310ee12-a1eb-4c9c-8fa5-df5f57002238",
                  "parentUUID": "158441ec-9c19-43ba-bbd1-c90d6390ee4c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "debería obtener una lista de productos",
                  "fullTitle": "Testing sesiones: Testing productos: debería obtener una lista de productos",
                  "timedOut": false,
                  "duration": 180,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const { statusCode, body } = await requester\n    .get('/api/products')\n    .set('x-test-mode', 'true');\n// Mostrar el cuerpo de la respuesta\nexpect(statusCode).to.equal(200);\nexpect(body).to.be.an('array');\nbody.forEach((producto) => {\n    expect(producto).to.have.property('_id');\n    expect(producto).to.have.property('title');\n});",
                  "err": {},
                  "uuid": "aaf5cce6-1af6-4249-b1b4-bcefd285f967",
                  "parentUUID": "158441ec-9c19-43ba-bbd1-c90d6390ee4c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1310ee12-a1eb-4c9c-8fa5-df5f57002238",
                "aaf5cce6-1af6-4249-b1b4-bcefd285f967"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 367,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "df25a016-f018-495e-874e-ce8072e7e36c",
              "title": "testing de carrito",
              "fullFile": "C:\\Users\\Tap\\Desktop\\proyectoFinal2.0\\test\\super.test.js",
              "file": "\\test\\super.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "agrega un producto al carrito",
                  "fullTitle": "Testing sesiones: testing de carrito agrega un producto al carrito",
                  "timedOut": false,
                  "duration": 544,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = await requester\n    .post(`/api/carts/${carritoId}/producto/${productoId}`)\n    .set('x-test-mode', 'true');\nexpect(req.statusCode).to.equal(200);\nexpect(req.body).to.have.property('carrito');",
                  "err": {},
                  "uuid": "0dee28f4-f09f-4cd0-b16f-d1c80631b6d7",
                  "parentUUID": "df25a016-f018-495e-874e-ce8072e7e36c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "elimina un producto del carrito",
                  "fullTitle": "Testing sesiones: testing de carrito elimina un producto del carrito",
                  "timedOut": false,
                  "duration": 445,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = await requester\n    .delete(`/api/carts/${carritoId}/${productoId}`)\n    .set('x-test-mode', 'true');\nexpect(req.statusCode).to.equal(200);\nexpect(req.body).to.have.property('status');",
                  "err": {},
                  "uuid": "8ccfe52d-b639-4be7-b649-31da43c56e81",
                  "parentUUID": "df25a016-f018-495e-874e-ce8072e7e36c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0dee28f4-f09f-4cd0-b16f-d1c80631b6d7",
                "8ccfe52d-b639-4be7-b649-31da43c56e81"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 989,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "90636fb2-8dc7-4bfb-b03a-2691a6d59138",
              "title": "Cerrar sesión:",
              "fullFile": "C:\\Users\\Tap\\Desktop\\proyectoFinal2.0\\test\\super.test.js",
              "file": "\\test\\super.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "debería cerrar sesión correctamente",
                  "fullTitle": "Testing sesiones: Cerrar sesión: debería cerrar sesión correctamente",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const { statusCode, body } = await requester.delete(\n    '/api/sessions/current'\n);\nexpect(statusCode).to.equal(200);\nexpect(body).to.have.property('status', 'success');\nexpect(body).to.have.property('message', 'logout OK');",
                  "err": {},
                  "uuid": "d6190d35-1fff-4dde-968c-f4e627cebd21",
                  "parentUUID": "90636fb2-8dc7-4bfb-b03a-2691a6d59138",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d6190d35-1fff-4dde-968c-f4e627cebd21"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.7.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "index",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "reports",
        "reportFilename": "index"
      },
      "version": "6.2.0"
    }
  }
}
{
    "stats": {
        "suites": 12,
        "tests": 10,
        "passes": 10,
        "pending": 0,
        "failures": 0,
        "start": "2024-08-06T16:47:09.591Z",
        "end": "2024-08-06T16:47:28.694Z",
        "duration": 19103,
        "testsRegistered": 10,
        "passPercent": 100,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false
    },
    "results": [
        {
            "uuid": "7baa1fa2-e3b8-4b33-a0b3-481a3aaa6910",
            "title": "",
            "fullFile": "",
            "file": "",
            "beforeHooks": [
                {
                    "title": "\"before all\" hook in \"{root}\"",
                    "fullTitle": "\"before all\" hook in \"{root}\"",
                    "timedOut": false,
                    "duration": 1836,
                    "state": null,
                    "speed": null,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "context": null,
                    "code": "// Conectar a la base de datos\nawait mongoose.connect(MONGODB_CNX_STR);",
                    "err": {},
                    "uuid": "59d69f48-42b8-4615-a612-a48b5b0bf0a4",
                    "parentUUID": "7baa1fa2-e3b8-4b33-a0b3-481a3aaa6910",
                    "isHook": true,
                    "skipped": false
                }
            ],
            "afterHooks": [
                {
                    "title": "\"after all\" hook in \"{root}\"",
                    "fullTitle": "\"after all\" hook in \"{root}\"",
                    "timedOut": false,
                    "duration": 7,
                    "state": null,
                    "speed": null,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "context": null,
                    "code": "// Desconectar de la base de datos\nawait mongoose.disconnect();",
                    "err": {},
                    "uuid": "e1a19e48-ea3c-4ff4-8bec-05fe4406a1cb",
                    "parentUUID": "7baa1fa2-e3b8-4b33-a0b3-481a3aaa6910",
                    "isHook": true,
                    "skipped": false
                },
                {
                    "title": "\"after each\" hook in \"{root}\"",
                    "fullTitle": "\"after each\" hook in \"{root}\"",
                    "timedOut": false,
                    "duration": 906,
                    "state": null,
                    "speed": null,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "context": null,
                    "code": "this.timeout(10000);\n// Limpiar colecciones después de cada prueba\nconst collections = await mongoose.connection.db\n    .listCollections()\n    .toArray();\nawait mongoose.connection.db.collection('productos').deleteMany({});\nawait mongoose.connection.db.collection('carritos').deleteMany({});\nawait mongoose.connection.db.collection('sessions').deleteMany({});\nawait mongoose.connection.db.collection('usuarios').deleteMany({});",
                    "err": {},
                    "uuid": "c9f2833e-13f7-497e-9dd1-6b7b55e0d784",
                    "parentUUID": "7baa1fa2-e3b8-4b33-a0b3-481a3aaa6910",
                    "isHook": true,
                    "skipped": false
                }
            ],
            "tests": [],
            "suites": [
                {
                    "uuid": "bc76521c-14c0-43c7-b608-13f9adaa2783",
                    "title": "Testing productos:",
                    "fullFile": "C:\\Users\\Tap\\Desktop\\proyecto final\\test\\super.test.js",
                    "file": "\\test\\super.test.js",
                    "beforeHooks": [],
                    "afterHooks": [],
                    "tests": [],
                    "suites": [
                        {
                            "uuid": "b5b214e5-9811-4b72-9517-6eda77d85765",
                            "title": "Agregar un producto:",
                            "fullFile": "C:\\Users\\Tap\\Desktop\\proyecto final\\test\\super.test.js",
                            "file": "\\test\\super.test.js",
                            "beforeHooks": [],
                            "afterHooks": [],
                            "tests": [
                                {
                                    "title": "debería agregar un producto correctamente",
                                    "fullTitle": "Testing productos: Agregar un producto: debería agregar un producto correctamente",
                                    "timedOut": false,
                                    "duration": 472,
                                    "state": "passed",
                                    "speed": "slow",
                                    "pass": true,
                                    "fail": false,
                                    "pending": false,
                                    "context": null,
                                    "code": "const producto = {\n    title: 'Casa',\n    description: 'Descripción de la casa',\n    price: 4241,\n    thumbnail: 'url-de-imagen',\n    code: `unique-code-${Date.now()}`,\n    stock: 10,\n    category: 'Inmuebles',\n    status: true,\n    owner: 'user@example.com',\n};\nconst { statusCode, body } = await requester.post('/api/products').send(producto);\nexpect(statusCode).to.equal(200);\nexpect(body).to.have.property('_id');\nexpect(body).to.have.property('title', 'Casa');\n// Validaciones adicionales de los campos",
                                    "err": {},
                                    "uuid": "2e9b8f0e-a38d-4dd9-b560-cde5e9ed63bd",
                                    "parentUUID": "b5b214e5-9811-4b72-9517-6eda77d85765",
                                    "isHook": false,
                                    "skipped": false
                                }
                            ],
                            "suites": [],
                            "passes": ["2e9b8f0e-a38d-4dd9-b560-cde5e9ed63bd"],
                            "failures": [],
                            "pending": [],
                            "skipped": [],
                            "duration": 472,
                            "root": false,
                            "rootEmpty": false,
                            "_timeout": 2000
                        },
                        {
                            "uuid": "ee3bb055-0b27-4c62-aa84-4178a90d1775",
                            "title": "Obtener productos:",
                            "fullFile": "C:\\Users\\Tap\\Desktop\\proyecto final\\test\\super.test.js",
                            "file": "\\test\\super.test.js",
                            "beforeHooks": [],
                            "afterHooks": [],
                            "tests": [
                                {
                                    "title": "debería obtener una lista de productos",
                                    "fullTitle": "Testing productos: Obtener productos: debería obtener una lista de productos",
                                    "timedOut": false,
                                    "duration": 186,
                                    "state": "passed",
                                    "speed": "slow",
                                    "pass": true,
                                    "fail": false,
                                    "pending": false,
                                    "context": null,
                                    "code": "const { statusCode, body } = await requester.get('/api/products');\nexpect(statusCode).to.equal(200);\nexpect(body).to.be.an('array');\nbody.forEach(producto => {\n    expect(producto).to.have.property('_id');\n    expect(producto).to.have.property('title');\n    // Validaciones adicionales de los campos\n});",
                                    "err": {},
                                    "uuid": "ef0892d7-f7bd-4ec7-88a6-74b3c25e5a63",
                                    "parentUUID": "ee3bb055-0b27-4c62-aa84-4178a90d1775",
                                    "isHook": false,
                                    "skipped": false
                                }
                            ],
                            "suites": [],
                            "passes": ["ef0892d7-f7bd-4ec7-88a6-74b3c25e5a63"],
                            "failures": [],
                            "pending": [],
                            "skipped": [],
                            "duration": 186,
                            "root": false,
                            "rootEmpty": false,
                            "_timeout": 2000
                        },
                        {
                            "uuid": "d8916306-10d3-44c0-be87-c9c3150fc657",
                            "title": "Eliminar un producto:",
                            "fullFile": "C:\\Users\\Tap\\Desktop\\proyecto final\\test\\super.test.js",
                            "file": "\\test\\super.test.js",
                            "beforeHooks": [],
                            "afterHooks": [],
                            "tests": [
                                {
                                    "title": "debería eliminar un producto correctamente",
                                    "fullTitle": "Testing productos: Eliminar un producto: debería eliminar un producto correctamente",
                                    "timedOut": false,
                                    "duration": 622,
                                    "state": "passed",
                                    "speed": "slow",
                                    "pass": true,
                                    "fail": false,
                                    "pending": false,
                                    "context": null,
                                    "code": "const producto = {\n    title: 'Auto',\n    description: 'Descripción del auto',\n    price: 15000,\n    thumbnail: 'url-de-imagen',\n    code: `unique-code-${Date.now()}`,\n    stock: 5,\n    category: 'Vehículos',\n    status: true,\n    owner: 'user@example.com',\n};\nconst { body: productoAgregado } = await requester.post('/api/products').send(producto);\nconst { _id } = productoAgregado;\nconst { statusCode, body } = await requester.delete(`/api/products/${_id}`);\nexpect(statusCode).to.equal(200);\nexpect(body).to.have.property('message').that.includes('Se eliminó el producto');",
                                    "err": {},
                                    "uuid": "096d8d2b-1ee8-47c8-9bc2-54d1eef4d590",
                                    "parentUUID": "d8916306-10d3-44c0-be87-c9c3150fc657",
                                    "isHook": false,
                                    "skipped": false
                                }
                            ],
                            "suites": [],
                            "passes": ["096d8d2b-1ee8-47c8-9bc2-54d1eef4d590"],
                            "failures": [],
                            "pending": [],
                            "skipped": [],
                            "duration": 622,
                            "root": false,
                            "rootEmpty": false,
                            "_timeout": 2000
                        }
                    ],
                    "passes": [],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 0,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 2000
                },
                {
                    "uuid": "534b849f-d1db-4b0c-ae21-a2b72b165046",
                    "title": "testing carritos:",
                    "fullFile": "C:\\Users\\Tap\\Desktop\\proyecto final\\test\\super.test.js",
                    "file": "\\test\\super.test.js",
                    "beforeHooks": [],
                    "afterHooks": [],
                    "tests": [],
                    "suites": [
                        {
                            "uuid": "14cae39e-ebad-44cb-9a34-932cbdcc675e",
                            "title": "Crear un producto:",
                            "fullFile": "C:\\Users\\Tap\\Desktop\\proyecto final\\test\\super.test.js",
                            "file": "\\test\\super.test.js",
                            "beforeHooks": [],
                            "afterHooks": [],
                            "tests": [
                                {
                                    "title": "crear carrito",
                                    "fullTitle": "testing carritos: Crear un producto: crear carrito",
                                    "timedOut": false,
                                    "duration": 367,
                                    "state": "passed",
                                    "speed": "slow",
                                    "pass": true,
                                    "fail": false,
                                    "pending": false,
                                    "context": null,
                                    "code": "const { statusCode, ok, body } = await requester.post(\n    '/api/carts/:userId'\n);\nexpect(statusCode).to.equal(200);\nexpect(ok).to.be.true;\nexpect(body).to.be.an('object'); // Espera un objeto en lugar de un array\nexpect(body).to.have.property('carrito');\nexpect(body.carrito).to.be.an('object'); // Asegúrate de que 'carrito' sea un objeto",
                                    "err": {},
                                    "uuid": "9d5a04b7-2230-48b4-b487-1b894fb21a78",
                                    "parentUUID": "14cae39e-ebad-44cb-9a34-932cbdcc675e",
                                    "isHook": false,
                                    "skipped": false
                                }
                            ],
                            "suites": [],
                            "passes": ["9d5a04b7-2230-48b4-b487-1b894fb21a78"],
                            "failures": [],
                            "pending": [],
                            "skipped": [],
                            "duration": 367,
                            "root": false,
                            "rootEmpty": false,
                            "_timeout": 2000
                        },
                        {
                            "uuid": "47cd9194-1452-47c0-861e-7c6a83c03233",
                            "title": "Agregar un producto al carrito:",
                            "fullFile": "C:\\Users\\Tap\\Desktop\\proyecto final\\test\\super.test.js",
                            "file": "\\test\\super.test.js",
                            "beforeHooks": [],
                            "afterHooks": [],
                            "tests": [
                                {
                                    "title": "debería agregar un producto al carrito correctamente",
                                    "fullTitle": "testing carritos: Agregar un producto al carrito: debería agregar un producto al carrito correctamente",
                                    "timedOut": false,
                                    "duration": 730,
                                    "state": "passed",
                                    "speed": "slow",
                                    "pass": true,
                                    "fail": false,
                                    "pending": false,
                                    "context": null,
                                    "code": "// Primero, crea un carrito para agregar productos\nconst carritoResponse = await requester.post('/api/carts/1234'); \n      \nconst carritoId = carritoResponse.body.carrito._id;\n    \n// Luego, agrega un producto al carrito\nconst producto = {\n    producto :{\n        _id: 'ofdskafok34',\n        title: 'casa',\n        description: 'adsfads',\n        price: 4241,\n        thumbnail: 'dsa234',\n        code: `unique-code-${Date.now()}`,\n        stock: 3241,\n        category: 'dsfa',\n        status: true,\n        owner: 'joaquin.ariel.lopez.98@gmail.com',\n    }\n}\n \nconst { statusCode, ok, body } = await requester\n    .post(`/api/carts/addProduct/${carritoId}`)\n    .send(producto);\nexpect(statusCode).to.equal(200);\nexpect(ok).to.be.true;\nexpect(body).to.be.an('object');\nexpect(body).to.have.property('carrito');\nexpect(body.carrito).to.be.an('object'); // O ajusta según la estructura que devuelves",
                                    "err": {},
                                    "uuid": "a71867d9-c5b3-4845-ba89-8302812eb64a",
                                    "parentUUID": "47cd9194-1452-47c0-861e-7c6a83c03233",
                                    "isHook": false,
                                    "skipped": false
                                }
                            ],
                            "suites": [],
                            "passes": ["a71867d9-c5b3-4845-ba89-8302812eb64a"],
                            "failures": [],
                            "pending": [],
                            "skipped": [],
                            "duration": 730,
                            "root": false,
                            "rootEmpty": false,
                            "_timeout": 2000
                        },
                        {
                            "uuid": "187318e5-a34c-4b26-aa05-42c2b57ebe9a",
                            "title": "Eliminar un producto del carrito:",
                            "fullFile": "C:\\Users\\Tap\\Desktop\\proyecto final\\test\\super.test.js",
                            "file": "\\test\\super.test.js",
                            "beforeHooks": [],
                            "afterHooks": [],
                            "tests": [
                                {
                                    "title": "debería eliminar un producto del carrito correctamente",
                                    "fullTitle": "testing carritos: Eliminar un producto del carrito: debería eliminar un producto del carrito correctamente",
                                    "timedOut": false,
                                    "duration": 1243,
                                    "state": "passed",
                                    "speed": "slow",
                                    "pass": true,
                                    "fail": false,
                                    "pending": false,
                                    "context": null,
                                    "code": "// Primero, crea un carrito para agregar productos\nconst carritoResponse = await requester.post('/api/carts/1234');\nconst carritoId = carritoResponse.body.carrito._id;\n// Luego, agrega un producto al carrito\nconst producto = {\n    producto: {\n        _id: 'ofdskafok34',\n        title: 'casa',\n        description: 'adsfads',\n        price: 4241,\n        thumbnail: 'dsa234',\n        code: `unique-code-${Date.now()}`,\n        stock: 3241,\n        category: 'dsfa',\n        status: true,\n        owner: 'joaquin.ariel.lopez.98@gmail.com',\n    }\n};\nawait requester\n    .post(`/api/carts/addProduct/${carritoId}`)\n    .send(producto);\n// Luego, elimina el producto agregado\nconst { statusCode, ok, body } = await requester.delete(`/api/carts/${carritoId}/ofdskafok34`);\nexpect(statusCode).to.equal(200);\nexpect(ok).to.be.true;\nexpect(body).to.be.an('object'); // Ajusta según la estructura que devuelves\nexpect(body).to.have.property('_id');",
                                    "err": {},
                                    "uuid": "499910df-4e2b-49eb-9ad5-ffd39f2718bc",
                                    "parentUUID": "187318e5-a34c-4b26-aa05-42c2b57ebe9a",
                                    "isHook": false,
                                    "skipped": false
                                }
                            ],
                            "suites": [],
                            "passes": ["499910df-4e2b-49eb-9ad5-ffd39f2718bc"],
                            "failures": [],
                            "pending": [],
                            "skipped": [],
                            "duration": 1243,
                            "root": false,
                            "rootEmpty": false,
                            "_timeout": 2000
                        }
                    ],
                    "passes": [],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 0,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 2000
                },
                {
                    "uuid": "5ab99b80-f48e-4436-af45-86e656613962",
                    "title": "Testing sesiones:",
                    "fullFile": "C:\\Users\\Tap\\Desktop\\proyecto final\\test\\super.test.js",
                    "file": "\\test\\super.test.js",
                    "beforeHooks": [],
                    "afterHooks": [],
                    "tests": [],
                    "suites": [
                        {
                            "uuid": "33712d59-be9d-4ed0-879d-a3a6b926840b",
                            "title": "Iniciar sesión:",
                            "fullFile": "C:\\Users\\Tap\\Desktop\\proyecto final\\test\\super.test.js",
                            "file": "\\test\\super.test.js",
                            "beforeHooks": [],
                            "afterHooks": [],
                            "tests": [
                                {
                                    "title": "debería iniciar sesión correctamente",
                                    "fullTitle": "Testing sesiones: Iniciar sesión: debería iniciar sesión correctamente",
                                    "timedOut": false,
                                    "duration": 1675,
                                    "state": "passed",
                                    "speed": "slow",
                                    "pass": true,
                                    "fail": false,
                                    "pending": false,
                                    "context": null,
                                    "code": "const datos = {\n    nombre: 'x',\n    apellido: 'x',\n    email: 'x@x.com',\n    password: '1234',\n};\nawait requester.post('/api/usuarios').send(datos);\nconst { statusCode, text } = await requester\n    .post('/api/sessions')\n    .send({ email: 'x@x.com', password: '1234' });\nconst body = JSON.parse(text);\nexpect(statusCode).to.equal(201);\nexpect(body).to.have.property('message', 'login success');",
                                    "err": {},
                                    "uuid": "ece8ddc5-cca8-4f7d-8ee4-cbdb59dd9227",
                                    "parentUUID": "33712d59-be9d-4ed0-879d-a3a6b926840b",
                                    "isHook": false,
                                    "skipped": false
                                },
                                {
                                    "title": "debería fallar con credenciales incorrectas",
                                    "fullTitle": "Testing sesiones: Iniciar sesión: debería fallar con credenciales incorrectas",
                                    "timedOut": false,
                                    "duration": 8,
                                    "state": "passed",
                                    "speed": "fast",
                                    "pass": true,
                                    "fail": false,
                                    "pending": false,
                                    "context": null,
                                    "code": "const credentials = {\n    username: 'usuario',\n    password: 'password',\n};\nconst { statusCode, body } = await requester\n    .post('/api/sessions')\n    .send(credentials);\nexpect(statusCode).to.equal(401);\nexpect(body).to.have.property('status', 'error');\nexpect(body).to.have.property('message');",
                                    "err": {},
                                    "uuid": "8a4637b3-ef92-4ea1-b84a-bbc6c01df062",
                                    "parentUUID": "33712d59-be9d-4ed0-879d-a3a6b926840b",
                                    "isHook": false,
                                    "skipped": false
                                }
                            ],
                            "suites": [],
                            "passes": [
                                "ece8ddc5-cca8-4f7d-8ee4-cbdb59dd9227",
                                "8a4637b3-ef92-4ea1-b84a-bbc6c01df062"
                            ],
                            "failures": [],
                            "pending": [],
                            "skipped": [],
                            "duration": 1683,
                            "root": false,
                            "rootEmpty": false,
                            "_timeout": 2000
                        },
                        {
                            "uuid": "ed67b615-dc8c-4b13-bae1-c4801fefe0a9",
                            "title": "Obtener sesión actual:",
                            "fullFile": "C:\\Users\\Tap\\Desktop\\proyecto final\\test\\super.test.js",
                            "file": "\\test\\super.test.js",
                            "beforeHooks": [],
                            "afterHooks": [],
                            "tests": [
                                {
                                    "title": "debería obtener la sesión actual",
                                    "fullTitle": "Testing sesiones: Obtener sesión actual: debería obtener la sesión actual",
                                    "timedOut": false,
                                    "duration": 2619,
                                    "state": "passed",
                                    "speed": "slow",
                                    "pass": true,
                                    "fail": false,
                                    "pending": false,
                                    "context": null,
                                    "code": "const datos = {\n    nombre: 'x',\n    apellido: 'x',\n    email: 'x@x.com',\n    password: '1234',\n};\n// Registrar el usuario\nawait requester.post('/api/usuarios').send(datos);\nconst loginResponse = await requester\n    .post('/api/sessions')\n    .send({ email: 'x@x.com', password: '1234' });\nconst cookies = loginResponse.headers['set-cookie'];\nconst response = await requester\n    .get('/api/usuarios/current')\n    .set('Cookie', cookies); \nconst { statusCode, body } = response;\nexpect(statusCode).to.equal(200); \nexpect(body).to.have.property('payload');",
                                    "err": {},
                                    "uuid": "a2407d28-28ca-427c-ac40-0726887c26f1",
                                    "parentUUID": "ed67b615-dc8c-4b13-bae1-c4801fefe0a9",
                                    "isHook": false,
                                    "skipped": false
                                }
                            ],
                            "suites": [],
                            "passes": ["a2407d28-28ca-427c-ac40-0726887c26f1"],
                            "failures": [],
                            "pending": [],
                            "skipped": [],
                            "duration": 2619,
                            "root": false,
                            "rootEmpty": false,
                            "_timeout": 5000
                        },
                        {
                            "uuid": "6b115240-ce94-4b3a-bc24-eab589a9b677",
                            "title": "Cerrar sesión:",
                            "fullFile": "C:\\Users\\Tap\\Desktop\\proyecto final\\test\\super.test.js",
                            "file": "\\test\\super.test.js",
                            "beforeHooks": [],
                            "afterHooks": [],
                            "tests": [
                                {
                                    "title": "debería cerrar sesión correctamente",
                                    "fullTitle": "Testing sesiones: Cerrar sesión: debería cerrar sesión correctamente",
                                    "timedOut": false,
                                    "duration": 185,
                                    "state": "passed",
                                    "speed": "slow",
                                    "pass": true,
                                    "fail": false,
                                    "pending": false,
                                    "context": null,
                                    "code": "const credentials = {\n    username: 'testuser',\n    password: 'testpassword'\n};\nawait requester.post('/api/sessions').send(credentials);\nconst { statusCode, body } = await requester.delete('/api/sessions/current');\nexpect(statusCode).to.equal(200);\nexpect(body).to.have.property('status', 'success');\nexpect(body).to.have.property('message', 'logout OK');",
                                    "err": {},
                                    "uuid": "695d780c-8a35-4bad-9741-1aac9651b74f",
                                    "parentUUID": "6b115240-ce94-4b3a-bc24-eab589a9b677",
                                    "isHook": false,
                                    "skipped": false
                                }
                            ],
                            "suites": [],
                            "passes": ["695d780c-8a35-4bad-9741-1aac9651b74f"],
                            "failures": [],
                            "pending": [],
                            "skipped": [],
                            "duration": 185,
                            "root": false,
                            "rootEmpty": false,
                            "_timeout": 2000
                        }
                    ],
                    "passes": [],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 0,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 2000
                }
            ],
            "passes": [],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": true,
            "rootEmpty": true,
            "_timeout": 2000
        }
    ],
    "meta": {
        "mocha": {
            "version": "10.7.0"
        },
        "mochawesome": {
            "options": {
                "quiet": false,
                "reportFilename": "index",
                "saveHtml": true,
                "saveJson": true,
                "consoleReporter": "spec",
                "useInlineDiffs": false,
                "code": true
            },
            "version": "7.1.3"
        },
        "marge": {
            "options": {
                "reportDir": "reports",
                "reportFilename": "index"
            },
            "version": "6.2.0"
        }
    }
}
